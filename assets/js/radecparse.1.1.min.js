function protectint(x,tiny=1e-8){if(1-x%1<tiny){return parseInt(x+tiny)}else{return parseInt(x)}}function protectzero(x,tiny=1e-8){if(Math.abs(x)<tiny){return 0}else{return x}}function truncate(x,n){var temp=Math.pow(10,n);return Math.floor(x*temp)/temp}function zeroPad(x,wantLen){var absx=Math.abs(x);var padNZeros=Math.max(0,wantLen-Math.floor(absx).toString().length);var zeroPadStr=Math.pow(10,padNZeros).toString().substr(1);if(x<0){zeroPadStr="-"+zeroPadStr}return zeroPadStr+absx}function degconvert(ra,dec){var deg2hr=24/360;var colonform="";var hmsform="";var spaceform="";var dmsform="";var hdform="";var validInputs=false;var validRa=false;var validDec=false;var errorStr="";if(ra>=0&&ra<360){validRa=true}else{errorStr+=`Invalid RA Input: ${ra} - RA must be within range 0<=RA<360\n`}if(dec>=-90&&dec<=90){validDec=true}else{errorStr+=`Invalid Dec Input: ${dec} - Declination must be within range -90<=Dec<=90\n`}if(validRa&&validDec){validInputs=true}if(validInputs){var radint=protectint(ra);var ram=(ra-radint)*60;var ramint=protectint(ram);var ras=ra-radint-ramint/60;ras=protectzero(ras*3600);var rahdecimal=ra*deg2hr;var rahint=protectint(rahdecimal);var ram2=(rahdecimal-rahint)*60;var ramint2=protectint(ram2);var ras2=rahdecimal-rahint-ramint2/60;ras2=protectzero(ras2*3600);var sign=1;var origdec=dec;if(dec<0){sign=-1;dec=Math.abs(dec)}var decdint=protectint(dec);var decm=(dec-decdint)*60;var decmint=protectint(decm);var decs=dec-decdint-decmint/60;decs=protectzero(decs*3600);decdint=decdint*sign;colonform=`${zeroPad(rahint,2)}:${zeroPad(ramint2,2)}:${zeroPad(ras2.toFixed(3),2)} `;colonform+=`${zeroPad(decdint,2)}:${zeroPad(decmint,2)}:${zeroPad(decs.toFixed(3),2)}`;hmsform=`${zeroPad(rahint,2)}h${zeroPad(ramint2,2)}m${zeroPad(ras2.toFixed(3),2)}s `;hmsform+=`${zeroPad(decdint,2)}d${zeroPad(decmint,2)}m${zeroPad(decs.toFixed(3),2)}s`;spaceform=`${zeroPad(rahint,2)} ${zeroPad(ramint2,2)} ${zeroPad(ras2.toFixed(3),2)} `;spaceform+=`${zeroPad(decdint,2)} ${zeroPad(decmint,2)} ${zeroPad(decs.toFixed(3),2)}`;dmsform=`${zeroPad(radint,2)}d${zeroPad(ramint,2)}m${zeroPad(ras.toFixed(3),2)}s `;dmsform+=`${zeroPad(decdint,2)}d${zeroPad(decmint,2)}m${zeroPad(decs.toFixed(3),2)}s`;hdform=`${rahdecimal.toFixed(8)}h ${origdec.toFixed(8)}d`}return[validInputs,colonform,hmsform,spaceform,dmsform,hdform,errorStr]}function shrinkspaces(instr){var idx=instr.indexOf("  ");while(idx>-1){instr=instr.substring(0,idx)+instr.substring(idx+1);idx=instr.indexOf("  ")}return instr}function characterHist(instr){let charHist=[...instr].reduce((a,c)=>!a[c]?{...a,[c]:1}:{...a,[c]:a[c]+1},{});return charHist}function replaceCharWith(instr,matchChar,repChar){var idx=instr.indexOf(matchChar);if(idx>=0){instr=instr.substring(0,idx)+repChar+instr.substring(idx+1)}return instr}function rdp(cstr){let idx=cstr.indexOf("âˆ’");if(idx>-1){cstr=cstr.substring(0,idx)+"-"+cstr.substring(idx+1)}cstr=shrinkspaces(cstr);cstr=cstr.trim();var csplit=cstr.split(" ");var nTok=csplit.length;var fullstr=csplit.join("");var charhist=characterHist(fullstr);var nDec=0,nColon=0,nh=0,nm=0,ns=0,nd=0,nplus=0,nneg=0;if("."in charhist){nDec=charhist["."]}if(":"in charhist){nColon=charhist[":"]}if("h"in charhist){nh=charhist["h"]}if("m"in charhist){nm=charhist["m"]}if("s"in charhist){ns=charhist["s"]}if("d"in charhist){nd=charhist["d"]}if("+"in charhist){nplus=charhist["+"]}if("-"in charhist){nneg=charhist["-"]}var rastr="";var decstr="";var radeg=0;var decdeg=0;var ra=0;var dec=0;var errorStr="";const hr2deg=15;const hrm2deg=hr2deg/60;const hrs2deg=hrm2deg/60;const m2deg=1/60;const s2deg=m2deg/60;const deg2hr=24/360;var accept=false;if(nTok==1&&(nplus==1||nneg==1)){if(nplus==1){var sidx=cstr.indexOf("+")}else{var sidx=cstr.indexOf("-")}csplit=[cstr.substring(0,sidx),cstr.substring(sidx)];nTok=2}if(nTok==2&&(nDec>=0&&nDec<=2)&&nColon==0&&nh==0&&nm==0&&ns==0&&nd==2){rastr=csplit[0];let idx=rastr.indexOf("d");if(idx>=0){rastr=rastr.substring(0,idx)}decstr=csplit[1];idx=decstr.indexOf("d");if(idx>=0){decstr=decstr.substring(0,idx)}csplit=[rastr,decstr];nd=0}if(nTok==2&&(nDec>=0&&nDec<=2)&&nColon==0&&nh==0&&nm==0&&ns==0&&nd==0){ra=parseFloat(csplit[0]);dec=parseFloat(csplit[1]);if(ra>=0&&ra<360&&dec>=-90&&dec<=90){accept=true;radeg=ra;decdeg=dec}else{errorStr+=`Invalid range of RA: ${ra} [0-360 deg) or declination: ${dec} [-90 - 90 deg]`}}var rand=csplit[0].split("d").length-1;if(nTok==2&&rand==1&&nColon==0){rastr=csplit[0];ra=0;var radsplit=rastr.split("d");var rad=parseFloat(radsplit[0]);let ranm=radsplit[1].split("m").length-1;if(ranm==1){var ramsplit=radsplit[1].split("m");rad=rad+parseFloat(ramsplit[0])/60;var rans=ramsplit[1].split("s").length-1;if(rans==1){var rassplit=ramsplit[1].split("s");rad=rad+parseFloat(rassplit[0])/3600}}let rah=rad*deg2hr;let rahint=protectint(rah);let ram=rah-rahint;let ramint=protectint(ram*60);let ras=ram-ramint/60;ras=truncate(protectzero(ras*3600),3);csplit[0]=`${zeroPad(rahint,2)}:${zeroPad(ramint,2)}:${zeroPad(ras.toFixed(3),2)}`;nd=nd-1;nh=1}if(nTok==2&&nColon==0&&(nh>0||nm>0||ns>0)&&nd==1){nColon=1;var rastr=csplit[0];rastr=replaceCharWith(rastr,"h",":");rastr=replaceCharWith(rastr,"m",":");rastr=replaceCharWith(rastr,"s","");var decstr=csplit[1];decstr=replaceCharWith(decstr,"d",":");decstr=replaceCharWith(decstr,"m",":");decstr=replaceCharWith(decstr,"s","");csplit=[rastr,decstr]}if(nTok==4&&nColon==0&&nDec==0){for(let i=0;i<nTok;i++){csplit[i]=csplit[i].replace(/[^\d.-]/g,"")}nTok=2;nColon=1;csplit[0]=`${zeroPad(parseInt(csplit[0]),2)}:${zeroPad(parseInt(csplit[1]),2)}:`;csplit[1]=`${zeroPad(parseInt(csplit[2]),2)}:${zeroPad(parseInt(csplit[3]),2)}:`}if(nTok==6&&nColon==0&&nDec>=0&&nDec<=2){for(let i=0;i<nTok;i++){csplit[i]=csplit[i].replace(/[^\d.-]/g,"")}nTok=2;nColon=1;csplit[0]=`${zeroPad(parseInt(csplit[0]),2)}:${zeroPad(parseInt(csplit[1]),2)}:${zeroPad(parseFloat(csplit[2]).toFixed(3),2)}`;csplit[1]=`${zeroPad(parseInt(csplit[3]),2)}:${zeroPad(parseInt(csplit[4]),2)}:${zeroPad(parseFloat(csplit[5]).toFixed(3),2)}`}if(nTok==2&&nColon>=1){var rasplit=csplit[0].split(":");var nra=rasplit.length;var rah=0;var ram=0;var ras=0;if(rasplit[0]){rah=parseFloat(rasplit[0])}if(nra>=2){if(rasplit[1]){ram=parseFloat(rasplit[1])}}if(nra==3){if(rasplit[2]){ras=truncate(parseFloat(rasplit[2]),3)}}var desplit=csplit[1].split(":");var nde=desplit.length;var ded=0;var dem=0;var des=0;if(desplit[0]){ded=parseFloat(desplit[0])}if(nde>=2){if(desplit[1]){dem=parseFloat(desplit[1])}}if(nde==3){if(desplit[2]){des=truncate(parseFloat(desplit[2]),3)}}if(nra>=1&&nra<=3&&nde>=1&&nde<=3){if(rah>=0&&rah<24&&ram>=0&&ram<60&&ras>=0&&ras<60){if(ded>=-90&&ded<=90&&dem>=0&&dem<60&&des>=0&&des<60){radeg=rah*hr2deg+ram*hrm2deg+ras*hrs2deg;if(ded>=0){decdeg=ded+dem*m2deg+des*s2deg}else{decdeg=ded-dem*m2deg-des*s2deg}if(radeg>=0&&radeg<360&&decdeg>=-90&&decdeg<=90){accept=true}else{errorStr+=`Unexpected validation error for ${cstr} ra [deg] ${radeg} dec [deg] ${decdeg}`}}else{errorStr+=`Invalid range of declination deg: ${ded} [-90 - 90 deg] or minutes: ${dem} [0-60 min) or seconds: ${des} [0-60sec)`}}else{errorStr+=`Invalid range of ra hour: ${rah} [0-24 hr) or minutes: ${ram} [0-60 min) or seconds ${ras} [0-60sec)`}}else{errorStr+=`Too many colons encountered in requested ra or dec ${cst}`}}if(!accept&&errorStr===""){errorStr+=`Could not find handler for input ${cstr}`}return[radeg,decdeg,accept,errorStr]}
